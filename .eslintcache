[{"/home/hubert/Pulpit/postus_front/src/index.js":"1","/home/hubert/Pulpit/postus_front/src/App.js":"2","/home/hubert/Pulpit/postus_front/src/reportWebVitals.js":"3","/home/hubert/Pulpit/postus_front/src/components/nav/nav.js":"4","/home/hubert/Pulpit/postus_front/src/components/wall/wall.js":"5","/home/hubert/Pulpit/postus_front/src/components/explore/explore.js":"6","/home/hubert/Pulpit/postus_front/src/components/dashboard/dashboard.js":"7","/home/hubert/Pulpit/postus_front/src/components/login/login.js":"8","/home/hubert/Pulpit/postus_front/src/components/register/register.js":"9","/home/hubert/Pulpit/postus_front/src/instance.js":"10"},{"size":500,"mtime":1607686621216,"results":"11","hashOfConfig":"12"},{"size":1431,"mtime":1608467895564,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607686621216,"results":"14","hashOfConfig":"12"},{"size":2617,"mtime":1608468512342,"results":"15","hashOfConfig":"12"},{"size":5203,"mtime":1608467308873,"results":"16","hashOfConfig":"12"},{"size":5928,"mtime":1608467885468,"results":"17","hashOfConfig":"12"},{"size":3972,"mtime":1608468385735,"results":"18","hashOfConfig":"12"},{"size":2113,"mtime":1608468470387,"results":"19","hashOfConfig":"12"},{"size":2654,"mtime":1608468830498,"results":"20","hashOfConfig":"12"},{"size":402,"mtime":1608467832616,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vy2z0y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hubert/Pulpit/postus_front/src/index.js",[],["47","48"],"/home/hubert/Pulpit/postus_front/src/App.js",[],"/home/hubert/Pulpit/postus_front/src/reportWebVitals.js",[],"/home/hubert/Pulpit/postus_front/src/components/nav/nav.js",[],"/home/hubert/Pulpit/postus_front/src/components/wall/wall.js",["49","50","51","52","53"],"import { React, useState, useEffect } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Favorite, Delete } from \"@material-ui/icons\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"../../instance\";\nimport \"../dashboard/dashboard.css\";\n\nfunction Dashboard(props, state) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [comment, setComment] = useState(\"\");\n  const [newPost, setNewPost] = useState(\"\");\n\n  const likePost = async (post_id, like) => {\n\n    try {\n      if (like) {\n        const res = await axios.put(\n          `api/post/${post_id}/like`,\n          {}\n        );\n      } else {\n        const res = await axios.delete(\n          `api/post/${post_id}/like`\n        );\n      }\n      setPosts([]);\n      getData();\n    } catch (err) {\n      setError(err.response);\n      console.error(err.response);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(\"api/wall\", {\n      });\n\n      setPosts([res.data.body]);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.reponse);\n    }\n  };\n\n  const pushComment = async (post_id) => {\n\n    try {\n      const res = await axios.post(\n        `api/post/${post_id}/comment`,\n        { text: comment }\n      );\n      // console.error(res);\n      setComment(\"\");\n      setPosts([]);\n      getData();\n    } catch (err) {\n      console.error(err.reponse);\n      setError(err.reponse);\n    }\n  };\n\n  const pushPost = async () => {\n\n    try {\n      const res = await axios.post(\n        `api/wall`,\n        { content: newPost },\n      );\n\n      setNewPost(\"\");\n      setPosts([]);\n      getData();\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  const deletePost = async (post_id) => {\n\n    try {\n      const res = await axios.delete(\n        `api/wall/${post_id}/post`\n      );\n      // console.error(res);\n      setPosts([]);\n      getData();\n    } catch (err) {\n      setError(err.response);\n      console.error(err.response);\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      {error && (\n        <Alert\n          severity=\"error\"\n          onClick={(event) => {\n            setError(null);\n          }}\n        >\n          {error.data.body}\n        </Alert>\n      )}\n\n      <TextField\n        placeholder=\"Type post content\"\n        rows=\"10\"\n        style={{ height: 50, width: 1000 }}\n        onChange={(event) => {\n          setNewPost(event.target.value);\n        }}\n      ></TextField>\n      <Button\n        onClick={(event) => {\n          pushPost();\n        }}\n      >\n        POST\n      </Button>\n\n      {posts.length &&\n        posts[0].map((posts) => (\n          <div className=\"post\">\n            <h3>\n              {posts[\"me.name\"]} {posts[\"me.lastName\"]}\n            </h3>\n            <h3>\n              {posts[\"n\"].properties.timestamp.year}-\n              {posts[\"n\"].properties.timestamp.month}-\n              {posts[\"n\"].properties.timestamp.day}{\" \"}\n              {posts[\"n\"].properties.timestamp.hour}:\n              {posts[\"n\"].properties.timestamp.minute}:\n              {posts[\"n\"].properties.timestamp.second}\n            </h3>\n            <div className=\"reactions\">\n              <Favorite\n                onClick={(event) => {\n                  posts[\"doILike\"]\n                    ? likePost(posts[\"id(n)\"], false)\n                    : likePost(posts[\"id(n)\"], true);\n                }}\n                style={{ fill: posts[\"doILike\"] ? \"red\" : \"black\" }}\n              ></Favorite>{\" \"}\n              <span>{posts.likes}</span>\n              <Delete\n                onClick={(event) => {\n                  deletePost(posts[\"id(n)\"]);\n                }}\n              ></Delete>\n            </div>\n            <div className=\"content\">{posts[\"n\"].properties.content}</div>\n            <TextField\n              placeholder=\"Type\"\n              rows=\"10\"\n              style={{ height: 50, width: 1000 }}\n              onChange={(event) => {\n                setComment(event.target.value);\n              }}\n            ></TextField>\n            <Button\n              onClick={(event) => {\n                pushComment(posts[\"id(n)\"]);\n              }}\n            >\n              Comment\n            </Button>\n            {posts.comments.map(\n              (comment) =>\n                comment.com != null && (\n                  <div className=\"comment\">\n                    <h3>\n                      {comment.name} {comment.lastName}\n                    </h3>\n                    <h6>\n                      {comment.com.properties.timestamp.year}-\n                      {comment.com.properties.timestamp.month}-\n                      {comment.com.properties.timestamp.day}{\" \"}\n                      {comment.com.properties.timestamp.hour}:\n                      {comment.com.properties.timestamp.minute}:\n                      {comment.com.properties.timestamp.second}\n                    </h6>\n                    {comment.com.properties.text}\n                  </div>\n                )\n            )}\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/home/hubert/Pulpit/postus_front/src/components/explore/explore.js",["54","55","56","57","58","59","60","61","62","63","64"],"import { React, useState, useEffect } from \"react\";\nimport { MenuItem, Select, CircularProgress } from \"@material-ui/core\";\nimport { PersonAdd, PersonAddDisabled } from \"@material-ui/icons\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"../../instance\";\nimport \"./explore.css\";\n\nfunction Explore(props) {\n  const [people, setPeople] = useState([]);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState(\"other\");\n\n  useEffect(() => {\n    getOther();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (value == \"other\") getOther();\n    else if (value == \"mayKnow\") getMayKnow();\n    else if (value == \"followed\") getFollowed();\n    else if (value == \"following\") getFollowing();\n  };\n\n  const getOther = async () => {\n    try {\n      if (!search.length) return null;\n      const res = await axios.get(`api/people/other`, {});\n      setPeople(res.data.body);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  const getFollowed = async () => {\n    try {\n      if (!search.length) return null;\n      const res = await axios.get(`api/people/followed`, {});\n      setPeople(res.data.body);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  const getFollowing = async () => {\n    try {\n      if (!search.length) return null;\n      const res = await axios.get(`api/people/following`);\n\n      setPeople(res.data.body);\n    } catch (err) {\n      console.error(err);\n      setError(err.response);\n    }\n  };\n\n  const getMayKnow = async () => {\n    try {\n      if (!search.length) return null;\n      const res = await axios.get(`api/people/mayKnow`, {});\n\n      setPeople(res.data.body);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  const followPerson = async (person_id) => {\n    try {\n      const res = await axios.put(`api/people/${person_id}/follow`, {});\n      setPeople([]);\n      handleSearch(search);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  const unfollowPerson = async (person_id) => {\n    try {\n      const res = await axios.delete(`api/people/${person_id}/follow`);\n      setPeople([]);\n      handleSearch(search);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  if (!people) return <CircularProgress></CircularProgress>;\n  return (\n    <div className=\"main\">\n      {error && (\n        <Alert\n          severity=\"error\"\n          onClick={(event) => {\n            setError(null);\n          }}\n        >\n          {error.data.body}\n        </Alert>\n      )}\n\n      <Select\n        defaultValue=\"other\"\n        onChange={(event) => {\n          setPeople([]);\n          handleSearch(event.target.value);\n          setSearch(event.target.value);\n        }}\n      >\n        <MenuItem value=\"mayKnow\">People You might know</MenuItem>\n        <MenuItem value=\"other\">Other people </MenuItem>\n        <MenuItem value=\"followed\">People You follow</MenuItem>\n        <MenuItem value=\"following\">People that are following You</MenuItem>\n      </Select>\n\n      <div className=\"people\">\n        {search == \"mayKnow\" &&\n          people.map((person) => (\n            <div className=\"person\">\n              <h3>\n                <PersonAdd\n                  onClick={(event) => {\n                    followPerson(person[\"c\"].identity);\n                  }}\n                  style={{ fill: \"green\" }}\n                  className=\"icon\"\n                ></PersonAdd>\n                {person.c.properties.name} {person[\"c\"].properties.lastName}\n                <p style={{ fontSize: \"10\" }}>Wspólni znajomi: {person.tf}</p>\n              </h3>\n            </div>\n          ))}\n\n        {search == \"followed\" &&\n          people.map((people) => (\n            <div className=\"person\">\n              <h3>\n                <PersonAddDisabled\n                  className=\"icon\"\n                  style={{ fill: \"red\" }}\n                  onClick={(event) => {\n                    unfollowPerson(people[\"myfriends\"].identity);\n                  }}\n                ></PersonAddDisabled>\n                {people[\"myfriends\"].properties.name}{\" \"}\n                {people[\"myfriends\"].properties.lastName}\n              </h3>\n            </div>\n          ))}\n\n        {search == \"following\" &&\n          people.map((people) => (\n            <div className=\"person\">\n              <h3>\n                {people[\"doIFollow\"] && (\n                  <PersonAddDisabled\n                    className=\"icon\"\n                    style={{ fill: \"red\" }}\n                    onClick={(event) => {\n                      unfollowPerson(people[\"following\"].identity);\n                    }}\n                  ></PersonAddDisabled>\n                )}\n                {!people[\"doIFollow\"] && (\n                  <PersonAdd\n                    className=\"icon\"\n                    style={{ fill: \"green\" }}\n                    onClick={(event) => {\n                      followPerson(people[\"following\"].identity);\n                    }}\n                  ></PersonAdd>\n                )}\n                {people[\"following\"].properties.name}{\" \"}\n                {people[\"following\"].properties.lastName}\n              </h3>\n            </div>\n          ))}\n\n        {search == \"other\" &&\n          people.map((people) => (\n            <div className=\"person\">\n              <h3>\n                <PersonAdd\n                  className=\"icon\"\n                  onClick={(event) => {\n                    followPerson(people[\"other\"].identity);\n                  }}\n                  style={{ fill: \"green\" }}\n                ></PersonAdd>{\" \"}\n                {people[\"other\"].properties.name}{\" \"}\n                {people[\"other\"].properties.lastName}\n              </h3>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Explore;\n","/home/hubert/Pulpit/postus_front/src/components/dashboard/dashboard.js",["65","66","67"],"import { React, useState, useEffect } from \"react\";\nimport { CircularProgress, TextField, Button } from \"@material-ui/core\";\nimport { Favorite } from \"@material-ui/icons\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"../../instance\";\nimport \"./dashboard.css\";\n\nfunction Dashboard(props, state) {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [comment, setComment] = useState(\"\");\n\n  const likePost = async (post_id, like) => {\n    try {\n      if (like) {\n        const res = await axios.put(`api/post/${post_id}/like`, {});\n      } else {\n        const res = await axios.delete(`api/post/${post_id}/like`);\n      }\n      setPosts([]);\n      getData();\n    } catch (err) {\n      setError(err.response);\n      console.error(err.response);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(\"api/dashboard\", {});\n      // console.log(res.data.body);\n\n      setPosts([res.data.body]);\n    } catch (err) {\n      console.error(err.response);\n      setError(err.response);\n    }\n  };\n\n  const pushComment = async (post_id) => {\n    try {\n      const res = await axios.post(\n        `api/post/${post_id}/comment`,\n        { text: comment }\n      );\n      // console.error(res);\n      setComment(\"\");\n      setPosts([]);\n      getData();\n    } catch (err) {\n      setError(err.response);\n      console.error(err);\n    }\n  };\n\n  if (!posts.length) return <CircularProgress></CircularProgress>;\n  return (\n    <div className=\"main\">\n      {error && (\n        <Alert\n          severity=\"error\"\n          onClick={(event) => {\n            setError(null);\n          }}\n        >\n          {error.data.body}\n        </Alert>\n      )}\n\n      {posts[0].map((posts) => (\n        <div className=\"post\">\n          <h3>\n            {posts[\"b.name\"]} {posts[\"b.lastName\"]}\n          </h3>\n          <h3>\n            {posts[\"n\"].properties.timestamp.year}-\n            {posts[\"n\"].properties.timestamp.month}-\n            {posts[\"n\"].properties.timestamp.day}{\" \"}\n            {posts[\"n\"].properties.timestamp.hour}:\n            {posts[\"n\"].properties.timestamp.minute}:\n            {posts[\"n\"].properties.timestamp.second}\n          </h3>\n          <div className=\"reactions\">\n            <Favorite\n              onClick={(event) => {\n                posts[\"doILike\"]\n                  ? likePost(posts[\"id(n)\"], false)\n                  : likePost(posts[\"id(n)\"], true);\n              }}\n              style={{ fill: posts[\"doILike\"] ? \"red\" : \"black\" }}\n            ></Favorite>{\" \"}\n            <span>{posts.likes}</span>\n          </div>\n          <div className=\"content\">{posts[\"n\"].properties.content}</div>\n          <TextField\n            placeholder=\"Type\"\n            rows=\"10\"\n            style={{ height: 50, width: 1000 }}\n            onChange={(event) => {\n              setComment(event.target.value);\n            }}\n          ></TextField>\n          <Button\n            onClick={(event) => {\n              pushComment(posts[\"id(n)\"]);\n            }}\n          >\n            Comment\n          </Button>\n          {posts.comments.map(\n            (comment) =>\n              comment.com != null && (\n                <div className=\"comment\">\n                  <h3>\n                    {comment.name} {comment.lastName}\n                  </h3>\n                  <h6>\n                    {comment.com.properties.timestamp.year}-\n                    {comment.com.properties.timestamp.month}-\n                    {comment.com.properties.timestamp.day}{\" \"}\n                    {comment.com.properties.timestamp.hour}:\n                    {comment.com.properties.timestamp.minute}:\n                    {comment.com.properties.timestamp.second}\n                  </h6>\n                  {comment.com.properties.text}\n                </div>\n              )\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/home/hubert/Pulpit/postus_front/src/components/login/login.js",[],"/home/hubert/Pulpit/postus_front/src/components/register/register.js",["68"],"import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"../../instance\";\nimport \"./register.css\";\n\nexport default function (props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [born, setBorn] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  function validateForm() {\n    return (\n      email.length > 0 &&\n      password.length > 0 &&\n      name.length > 0 &&\n      lastName.length > 0 &&\n      born.length > 0\n    );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await axios.post(\n        \"register\",\n        JSON.stringify({\n          email: email,\n          password: password,\n          name: name,\n          lastName: lastName,\n          born: born,\n        })\n      );\n\n      props.history.push(\"/login\");\n    } catch (err) {\n      if (err) {\n        console.error(err.response.data.body.details[0].message);\n        setError(err.response.data.body.details[0].message);\n      }\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      {error && (\n        <Alert\n          severity=\"error\"\n          onClick={(event) => {\n            setError(null);\n            event.preventDefault();\n          }}\n        >\n          {error}\n        </Alert>\n      )}\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        className=\"form\"\n      >\n        <TextField\n          id=\"name\"\n          label=\"name\"\n          type=\"name\"\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n        <TextField\n          id=\"lastName\"\n          label=\"lastName\"\n          type=\"lastName\"\n          onChange={(event) => {\n            setLastName(event.target.value);\n          }}\n        />\n        <TextField\n          id=\"born\"\n          label=\"born\"\n          type=\"born\"\n          onChange={(event) => {\n            setBorn(event.target.value);\n          }}\n        />\n        <TextField\n          id=\"email\"\n          label=\"email\"\n          type=\"email\"\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n        <TextField\n          id=\"password\"\n          label=\"password\"\n          type=\"password\"\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n\n        <Button type=\"submit\" disabled={!validateForm()}>\n          Regsiter\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/home/hubert/Pulpit/postus_front/src/instance.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":18,"column":15,"nodeType":"75","messageId":"76","endLine":18,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":23,"column":15,"nodeType":"75","messageId":"76","endLine":23,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":54,"column":13,"nodeType":"75","messageId":"76","endLine":54,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":71,"column":13,"nodeType":"75","messageId":"76","endLine":71,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":88,"column":13,"nodeType":"75","messageId":"76","endLine":88,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":15,"column":6,"nodeType":"79","endLine":15,"endColumn":8,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":18,"column":15,"nodeType":"83","messageId":"84","endLine":18,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":19,"column":20,"nodeType":"83","messageId":"84","endLine":19,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":20,"column":20,"nodeType":"83","messageId":"84","endLine":20,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":21,"column":20,"nodeType":"83","messageId":"84","endLine":21,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":72,"column":13,"nodeType":"75","messageId":"76","endLine":72,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":83,"column":13,"nodeType":"75","messageId":"76","endLine":83,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":121,"column":17,"nodeType":"83","messageId":"84","endLine":121,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":138,"column":17,"nodeType":"83","messageId":"84","endLine":138,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":155,"column":17,"nodeType":"83","messageId":"84","endLine":155,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":183,"column":17,"nodeType":"83","messageId":"84","endLine":183,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":16,"column":15,"nodeType":"75","messageId":"76","endLine":16,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":18,"column":15,"nodeType":"75","messageId":"76","endLine":18,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":46,"column":13,"nodeType":"75","messageId":"76","endLine":46,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":7,"column":1,"nodeType":"87","endLine":114,"endColumn":2},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOther'. Either include it or remove the dependency array.","ArrayExpression",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [getOther]",{"range":"93","text":"94"},[499,501],"[getOther]"]